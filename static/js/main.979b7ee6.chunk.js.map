{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateDuration","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpTime","remainingTime","removeItem","duration","retriveToken","useState","setToken","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","expiredDuration","Provider","value","children","MainNavigation","AuthCtx","useContext","isLogin","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPassRef","useRef","form","onSubmit","event","preventDefault","newPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","replace","control","htmlFor","type","id","ref","action","UserProfile","profile","AuthForm","emailRef","passwordRef","setIsLogin","isLoading","setisLoading","APIKey","auth","url","enteredEmail","enteredPassword","email","res","ok","json","data","errorMessage","error","message","alert","Error","expireTi","expiresIn","toISOString","catch","err","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.979b7ee6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3Nkn7\",\"control\":\"ProfileForm_control__20_k6\",\"action\":\"ProfileForm_action__2Dn3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2H3Lv\",\"logo\":\"MainNavigation_logo__3Pppl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1cY0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2d1Vi\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nlet logoutTimer;\r\n\r\nconst calculateDuration = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const expiredTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingTime = expiredTime - currentTime;\r\n  return remainingTime;\r\n};\r\n\r\nconst retriveToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpTime = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateDuration(storedExpTime);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  } else {\r\n    return {\r\n      token: storedToken,\r\n      duration: remainingTime,\r\n    };\r\n  }\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retriveToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const isLoggedIn = !!token;\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const login = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n    const expiredDuration = calculateDuration(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logout, expiredDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logout, tokenData.duration);\r\n    }\r\n  }, [tokenData, logout]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: isLoggedIn,\r\n    login: login,\r\n    logout: logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const AuthCtx = useContext(AuthContext);\n  const isLogin = AuthCtx.isLoggedIn;\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLogin && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLogin && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLogin && (\n            <li>\n              <button onClick={AuthCtx.logout}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './ProfileForm.module.css';\nimport { useRef, useContext } from 'react';\nimport { AuthContext } from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const newPassRef = useRef();\n  const AuthCtx = useContext(AuthContext);\n\n  const changePassword = (event) => {\n    event.preventDefault();\n    const newPassword = newPassRef.current.value;\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyAj9TFAmUSs3qxZVi7U6aTZdKPqMR5t8rI', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: AuthCtx.token,\n        password: newPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    }).then(() => {\n      history.replace('/')\n    })\n  }\n\n  return (\n    <form className={classes.form} onSubmit={changePassword}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' ref={newPassRef}/>\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setisLoading] = useState(false);\n  const APIKey = \"AIzaSyAj9TFAmUSs3qxZVi7U6aTZdKPqMR5t8rI\";\n  const AuthCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n\n    setisLoading(true);\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\n        APIKey;\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\n        APIKey;\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setisLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            if (data.error.message) {\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expireTi = new Date(new Date().getTime() + (+data.expiresIn * 1000))\n        AuthCtx.login(data.idToken, expireTi.toISOString());\n        history.replace('/')\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Signing up...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport { AuthContext } from \"./store/auth-context\";\n\nfunction App() {\n  const AuthCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!AuthCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        {AuthCtx.isLoggedIn && (\n          <Route path=\"/profile\">\n            <UserProfile />\n          </Route>\n        )}\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__robhz\",\"control\":\"AuthForm_control__1bT6a\",\"actions\":\"AuthForm_actions__3jLyq\",\"toggle\":\"AuthForm_toggle__25cQs\"};"],"sourceRoot":""}